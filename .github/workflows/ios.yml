name: CMake

on:
  push:
    branches: [ "test-ios11" ]
  pull_request:
    branches: [ "test-ios11" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.4'
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      shell: pwsh
      run: |
        $cwd = '${{github.workspace}}'
        curl -L 'https://raw.githubusercontent.com/yasio/yasio/dev/cmake/ios.cmake' -o $cwd/cmake/ios.cmake
        cmake -B build -GXcode "-DCMAKE_TOOLCHAIN_FILE=$cwd/cmake/ios.cmake" '-DALSOFT_OSX_FRAMEWORK=ON'

    - name: Build
      # Build your program with the given configuration
      run: cmake --build build --config ${{env.BUILD_TYPE}} --target OpenAL

